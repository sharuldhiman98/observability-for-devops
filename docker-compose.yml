version: "3.8"

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data: {}
  grafana_data: {}

services:
  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana

  notes-app:
    build:
      context: ./notes-app
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./data/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./data/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    networks:
      - monitoring
    restart: unless-stopped
      - "8000:8000"
    container_name: notes-app
    restart: always

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "9090:9090"
      - 8080:8080
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - redis
    networks:
      - monitoring
    restart: unless-stopped

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
@@ -48,35 +41,44 @@ services:
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
      - "9100:9100"
    networks:
      - monitoring

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8080:8080"
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    expose:
      - 9090
    networks:
      - monitoring
    restart: unless-stopped

  notes-app:
    image: notes-app:latest
    build:
      context: ./notes-app
      dockerfile: Dockerfile
    container_name: notes-app
  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    ports:
      - "8000:8000"
      - "3000:3000"
    volumes:
      - ./notes-app:/app
      - grafana_data:/var/lib/grafana
      - ./data/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./data/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    networks:
      - monitoring
    restart: always

volumes:
   prometheus_data: {}
   grafana_data: {}
networks:
  monitoring:
